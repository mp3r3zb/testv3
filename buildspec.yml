version: 0.2
batch:
  fast-fail: false
phases:
 install: # Install AWS cli, kubectl
  commands:
   - echo Set parameter
   - REGION=us-east-2
   - AWS_ACCOUNTID=695013654214
   - ECR_NAME=hello-repository
   # - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1–7)
   - IMAGE_TAG=${COMMIT_HASH:=latest}
   - EKS_NAME=clust-mpb
   - DEPLOYMENT_NAME=app-hola-mundo-deployment
   - REPOSITORY_URI=${AWS_ACCOUNTID}.dkr.ecr.${REGION}.amazonaws.com/${ECR_NAME}
   - apt install -y awscli git python3 unzip tar
   - echo Install AWS Executable
   - curl -LO https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
   - unzip awscli-exe-linux-x86_64.zip
   - chmod +x ./aws/dist/aws
   - mv ./aws/dist/aws /usr/local/bin/aws
   - echo Install Docker Executable
   - curl -LO https://download.docker.com/linux/static/stable/x86_64/docker-20.10.9.tgz
   - tar zxvf docker-20.10.9.tgz
   - chmod +x ./docker/docker
   - mv ./docker/docker /usr/local/bin/docker
   - echo Logging to AWS ECR…
   - aws ecr get-login-password — region $REGION | docker login — username AWS — password-stdin ${AWS_ACCOUNTID}.dkr.ecr.${REGION}.amazonaws.com
   # - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 695013654214.dkr.ecr.us-east-2.amazonaws.com
   - echo Installing necessary library…
   - apt-get update
   - apt install -y awscli git python3
   - curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
   - chmod +x ./aws-iam-authenticator
   - mkdir -p ~/bin && cp ./aws-iam-authenticator ~/bin/aws-iam-authenticator && export PATH=~/bin:$PATH
   - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
   - chmod +x kubectl
   - mv ./kubectl /usr/local/bin/kubectl
   - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
   - chmod 700 get_helm.sh
   - ./get_helm.sh
 pre_build: # Add kubeconfig to access to EKS cluster
  commands:
   - echo Update kubeconfig…
   - aws eks update-kubeconfig — name ${EKS_NAME} — region ${REGION}
   - kubectl version
 build: # Build Docker image and tag it with the commit sha
  commands:
   - echo Building docker image…
   - docker build -t $REPOSITORY_URI:latest — file Dockerfile .
   - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
 post_build: # Push the Docker image to the ECR
  commands:
   - echo Pushing ECR…
   - docker push $REPOSITORY_URI:latest
   - docker push $REPOSITORY_URI:$IMAGE_TAG
   - echo Rollout new version
   - echo kubectl set image deployment/$DEPLOYMENT_NAME [container name]=$REPOSITORY_URI:$IMAGE_TAG
   - “kubectl set image deployment/$DEPLOYMENT_NAME [container name]=$REPOSITORY_URI:$IMAGE_TAG”
